#!/usr/bin/env node
const fs = require('fs');
const { execSync } = require('child_process');

console.log('üöÇ Iniciando build otimizado para Railway...');

try {
  // Backup do next.config.ts original
  if (fs.existsSync('next.config.ts')) {
    console.log('üì¶ Fazendo backup da configura√ß√£o original...');
    fs.renameSync('next.config.ts', 'next.config.original.ts');
  }

  // Usar configura√ß√£o otimizada
  console.log('‚öôÔ∏è Aplicando configura√ß√£o otimizada...');
  fs.renameSync('next.config.railway.ts', 'next.config.ts');

  // N√£o limpar cache pois est√° montado como volume no Railway

  // Executar build com limite de mem√≥ria aumentado
  console.log('üî® Executando build...');
  execSync('NODE_OPTIONS="--max-old-space-size=8192" next build', { 
    stdio: 'inherit',
    env: {
      ...process.env,
      NODE_OPTIONS: '--max-old-space-size=8192'
    }
  });

  console.log('‚úÖ Build conclu√≠do com sucesso!');
} catch (error) {
  console.error('‚ùå Erro durante o build:', error.message);
  process.exit(1);
} finally {
  // Restaurar configura√ß√£o original
  if (fs.existsSync('next.config.ts') && fs.existsSync('next.config.original.ts')) {
    console.log('üîÑ Restaurando configura√ß√£o original...');
    fs.unlinkSync('next.config.ts');
    fs.renameSync('next.config.original.ts', 'next.config.ts');
  }
}